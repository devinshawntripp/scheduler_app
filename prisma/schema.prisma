generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String    @id @default(uuid())
  email               String    @unique
  password            String
  roles               UserRole[]
  teamOwnerId         String?
  teamOwner           User?     @relation("TeamMembers", fields: [teamOwnerId], references: [id])
  teamMembers         User[]    @relation("TeamMembers")
  invitedByTeamOwner  String?
  googleCalendarId    String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  bookings            Booking[] @relation("ContractorBookings")
  ownedBookings       Booking[] @relation("TeamOwnerBookings")
  events              Event[]
  sentInvitations     Invitation[]
  hasUnreadInvitation Boolean   @default(false)
}

model UserRole {
  id     String @id @default(uuid())
  name   String @unique
  users  User[]
}

model Invitation {
  id          String   @id @default(cuid())
  email       String
  teamOwnerId String
  teamOwner   User     @relation(fields: [teamOwnerId], references: [id])
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Booking {
  id                String   @id @default(uuid())
  teamOwnerId       String
  contractorId      String
  customerFirstName String
  customerLastName  String
  address           String
  city              String
  state             String
  description       String
  startDateTime     DateTime
  endDateTime       DateTime
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  teamOwner         User     @relation("TeamOwnerBookings", fields: [teamOwnerId], references: [id])
  contractor        User     @relation("ContractorBookings", fields: [contractorId], references: [id])
}

model Event {
  id          String   @id @default(uuid())
  userId      String
  title       String
  start       DateTime
  end         DateTime
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}